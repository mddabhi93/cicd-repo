version: 0.2
run-as: root

phases:

  install:
    commands:
      - echo Installing app dependencies...
      - yum update -y
      - amazon-linux-extras install docker
      - service docker start
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
      #- chmod +x eks_cicd/prereqs.sh
      #- sh eks_cicd/prereqs.sh

  pre_build:
    commands:
      - echo Logging into Amazon EKS...
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
      - echo check config 
      - kubectl config view --minify
      - echo check kubectl access
#- kubectl get svc
#      - echo Logging in to Amazon ECR...
#      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
#      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
#      - echo $REPOSITORY_URI
#      - docker pull $REPOSITORY_URI:$IMAGE_TAG
      

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...      
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 608420342248.dkr.ecr.us-east-1.amazonaws.com
      - docker build -t tomcat-ecr-image .
      - docker tag tomcat-ecr-image:latest 608420342248.dkr.ecr.us-east-1.amazonaws.com/tomcat-ecr-image:latest
      - docker push 608420342248.dkr.ecr.us-east-1.amazonaws.com/tomcat-ecr-image:latest
  post_build:
    commands:
      - echo Push the latest image to cluster
      - kubectl apply -f eks_cicd/deployment.yaml
      - kubectl apply -f eks_cicd/service.yaml
      - kubectl rollout restart -f eks_cicd/deployment.yaml
      - kubectl get svc --all-namespaces
